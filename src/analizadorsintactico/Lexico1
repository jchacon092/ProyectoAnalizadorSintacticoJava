package analizadorsintactico;

import static analizadorsintactico.Token3.*;
%%
%class Lexico1
%type Token3
L = [a-zA-Z_]
D = [0-9]
NUMERO = [0-9]+
ID = [a-zA-Z]?+[0-9]*
WHITE=[ \t\r\n] 

FOR="for"
IF="if"
WHILE="while"
DO="do"
INT="int"
STRING="string"
CHAR="char"
BYTE="byte"
FLOAT="float"
SHORT="short"
ESPACIO=" "
PUNTOCOMA=";"
INBLOQUE="{"
FINBLOQUE="}"
PARE1="("
PARE2=")"
IGUAL = "="
PRINTF="printf"
OPERADOR_RELACIONAL = [">"|"<"|"=="|"!="|">="|"<="|"<<"|">>"]
OPERADOR_ARITMETICO = ["+"|"-"] 

%{
public String lexeme;
%}
%%
{WHITE} {/*Ignore*/}


/* FOR */
{FOR}{PARE1}{ID}{IGUAL}{NUMERO}{PUNTOCOMA}{ESPACIO}{ID}{OPERADOR_RELACIONAL}{ID}{PUNTOCOMA}{ESPACIO}{ID}{OPERADOR_ARITMETICO}{OPERADOR_ARITMETICO}{PARE2} {lexeme = yytext(); return FOR_LINEA1;}
{INBLOQUE} {lexeme = yytext(); return FOR_LINEA2;}
{PRINTF}{PARE1}{ID}{PARE2}{PUNTOCOMA} {lexeme = yytext(); return FOR_LINEA3;}
{FINBLOQUE} {lexeme = yytext(); return FOR_LINEA4;}

. {return ERROR;}

